{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[currencies,setCurrencies]=useState([]);const[fromCurrency,setFromCurrency]=useState(\"BTC\");const[toCurrency,setToCurrency]=useState(\"USD\");const[amount,setAmount]=useState(\"\");const[result,setResult]=useState(\"\");useEffect(()=>{const fetchCurrencies=async()=>{try{// Fetching cryptocurrency list from CryptoCompare API\nconst apiKey=\"d4f683327d3ad228ea83784866b01e88679499b4eaa6c7e9f14eb7a5c2cc2151\";const response=await fetch(\"https://min-api.cryptocompare.com/data/all/coinlist?api_key=\".concat(apiKey));const{Data}=await response.json();const allowedCurrencies=[\"BTC\",\"ETH\",// Add Bitcoin and Ethereum at the beginning\n\"BNB\",\"ADA\",\"XRP\",\"SOL\",\"DOT\",\"DOGE\",\"USDC\",\"AVAX\",\"LINK\",\"LTC\",\"BCH\",\"XLM\",\"ALGO\",\"UNI\",\"WBTC\",\"LUNA\",\"VET\",\"ATOM\",\"TRX\",\"XMR\",\"FIL\",\"XTZ\",\"MIOTA\",\"AAVE\",\"SHIB\",\"HBAR\",\"THETA\",\"FTT\",\"CAKE\",\"CRO\",\"MKR\",\"NEO\",\"EOS\",\"DASH\",\"KSM\",\"BTT\",\"CHESS\",\"COMP\",\"EGLD\",\"MANA\",\"ZEC\",\"HT\",\"SUSHI\",\"GRT\",\"SNX\",\"CEL\",\"OKB\",\"ONE\",\"WAVES\",\"CHZ\",\"ENJ\",\"HOT\",\"CELO\",\"REN\",\"RSR\",\"ZRX\",\"QTUM\",\"XEM\",\"CRV\",\"BAT\",\"OMG\",\"NEXO\",\"CHSB\",\"ICX\",\"TUSD\",\"ANKR\",\"ZEN\",\"STX\",\"SRM\",\"KCS\",\"DENT\",\"WRX\",\"AR\",\"ONT\",\"VGX\",\"SC\",\"BNT\",\"RENBTC\",\"UMA\",\"REP\",\"LRC\",\"RARI\",\"PERP\",\"BAND\",\"KP3R\",\"KAVA\",\"OCEAN\",\"BAL\",\"RSV\",\"FET\",\"CKB\",\"TWT\",\"HUSD\",\"SCRT\",\"RUNE\"// Add more currencies as needed\n];const cryptoCurrencies=allowedCurrencies.map(symbol=>({id:Data[symbol].Symbol,symbol:Data[symbol].Symbol}));setCurrencies(cryptoCurrencies);}catch(error){console.error(\"Error fetching currencies:\",error);alert(\"Error fetching currencies. Please try again.\");}};// Fetch the currencies on page load\nfetchCurrencies();},[]);const convert=async()=>{if(!fromCurrency||!toCurrency||!amount){alert(\"Please fill in all fields.\");return;}// CryptoCompare API endpoint for price conversion\nconst apiKey=\"d4f683327d3ad228ea83784866b01e88679499b4eaa6c7e9f14eb7a5c2cc2151\";const apiUrl=\"https://min-api.cryptocompare.com/data/price?fsym=\".concat(fromCurrency,\"&tsyms=\").concat(toCurrency,\"&api_key=\").concat(apiKey);try{// Fetch conversion data from CryptoCompare\nconst response=await fetch(apiUrl);const data=await response.json();// Check if conversion data is available\nif(data&&data[toCurrency]){const conversionResult=data[toCurrency];setResult(\"\".concat(amount,\" \").concat(fromCurrency,\" = \").concat(conversionResult,\" \").concat(toCurrency));}else{alert(\"Error fetching data. Please try again.\");}}catch(error){console.error(\"Error:\",error);alert(\"Error fetching data. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"currencyText\",children:\"Currency Converter\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"cryptoConverter\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Crypto Converter\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fromCurrency\",children:\"From:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"fromCurrency\",value:fromCurrency,onChange:e=>setFromCurrency(e.target.value),children:currencies.map(currency=>/*#__PURE__*/_jsx(\"option\",{value:currency.id,children:currency.symbol},currency.id))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"amount\",children:\"Amount:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"amount\",placeholder:\"Enter amount\",value:amount,onChange:e=>setAmount(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"toCurrency\",children:\"To:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"toCurrency\",value:toCurrency,onChange:e=>setToCurrency(e.target.value),children:currencies.map(currency=>/*#__PURE__*/_jsx(\"option\",{value:currency.id,children:currency.symbol},currency.id))}),/*#__PURE__*/_jsx(\"button\",{onClick:convert,children:\"Convert\"}),/*#__PURE__*/_jsx(\"div\",{id:\"result\",children:result}),/*#__PURE__*/_jsx(\"img\",{src:\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/1280px-Bitcoin.svg.png\",alt:\"Bitcoin Logo\",id:\"bitcoinLogo\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","currencies","setCurrencies","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","result","setResult","fetchCurrencies","apiKey","response","fetch","concat","Data","json","allowedCurrencies","cryptoCurrencies","map","symbol","id","Symbol","error","console","alert","convert","apiUrl","data","conversionResult","children","htmlFor","value","onChange","e","target","currency","type","placeholder","onClick","src","alt"],"sources":["C:/Users/kunal/OneDrive/Desktop/converter/Crypto-Converter/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const [fromCurrency, setFromCurrency] = useState(\"BTC\");\r\n  const [toCurrency, setToCurrency] = useState(\"USD\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchCurrencies = async () => {\r\n      try {\r\n        // Fetching cryptocurrency list from CryptoCompare API\r\n        const apiKey =\r\n          \"d4f683327d3ad228ea83784866b01e88679499b4eaa6c7e9f14eb7a5c2cc2151\";\r\n        const response = await fetch(\r\n          `https://min-api.cryptocompare.com/data/all/coinlist?api_key=${apiKey}`\r\n        );\r\n\r\n        const { Data } = await response.json();\r\n\r\n        const allowedCurrencies = [\r\n          \"BTC\",\r\n          \"ETH\", // Add Bitcoin and Ethereum at the beginning\r\n          \"BNB\",\r\n          \"ADA\",\r\n          \"XRP\",\r\n          \"SOL\",\r\n          \"DOT\",\r\n          \"DOGE\",\r\n          \"USDC\",\r\n          \"AVAX\",\r\n          \"LINK\",\r\n          \"LTC\",\r\n          \"BCH\",\r\n          \"XLM\",\r\n          \"ALGO\",\r\n          \"UNI\",\r\n          \"WBTC\",\r\n          \"LUNA\",\r\n          \"VET\",\r\n          \"ATOM\",\r\n          \"TRX\",\r\n          \"XMR\",\r\n          \"FIL\",\r\n          \"XTZ\",\r\n          \"MIOTA\",\r\n          \"AAVE\",\r\n          \"SHIB\",\r\n          \"HBAR\",\r\n          \"THETA\",\r\n          \"FTT\",\r\n          \"CAKE\",\r\n          \"CRO\",\r\n          \"MKR\",\r\n          \"NEO\",\r\n          \"EOS\",\r\n          \"DASH\",\r\n          \"KSM\",\r\n          \"BTT\",\r\n          \"CHESS\",\r\n          \"COMP\",\r\n          \"EGLD\",\r\n          \"MANA\",\r\n          \"ZEC\",\r\n          \"HT\",\r\n          \"SUSHI\",\r\n          \"GRT\",\r\n          \"SNX\",\r\n          \"CEL\",\r\n          \"OKB\",\r\n          \"ONE\",\r\n          \"WAVES\",\r\n          \"CHZ\",\r\n          \"ENJ\",\r\n          \"HOT\",\r\n          \"CELO\",\r\n          \"REN\",\r\n          \"RSR\",\r\n          \"ZRX\",\r\n          \"QTUM\",\r\n          \"XEM\",\r\n          \"CRV\",\r\n          \"BAT\",\r\n          \"OMG\",\r\n          \"NEXO\",\r\n          \"CHSB\",\r\n          \"ICX\",\r\n          \"TUSD\",\r\n          \"ANKR\",\r\n          \"ZEN\",\r\n          \"STX\",\r\n          \"SRM\",\r\n          \"KCS\",\r\n          \"DENT\",\r\n          \"WRX\",\r\n          \"AR\",\r\n          \"ONT\",\r\n          \"VGX\",\r\n          \"SC\",\r\n          \"BNT\",\r\n          \"RENBTC\",\r\n          \"UMA\",\r\n          \"REP\",\r\n          \"LRC\",\r\n          \"RARI\",\r\n          \"PERP\",\r\n          \"BAND\",\r\n          \"KP3R\",\r\n          \"KAVA\",\r\n          \"OCEAN\",\r\n          \"BAL\",\r\n          \"RSV\",\r\n          \"FET\",\r\n          \"CKB\",\r\n          \"TWT\",\r\n          \"HUSD\",\r\n          \"SCRT\",\r\n          \"RUNE\",\r\n          // Add more currencies as needed\r\n        ];\r\n\r\n        const cryptoCurrencies = allowedCurrencies.map((symbol) => ({\r\n          id: Data[symbol].Symbol,\r\n          symbol: Data[symbol].Symbol,\r\n        }));\r\n\r\n        setCurrencies(cryptoCurrencies);\r\n      } catch (error) {\r\n        console.error(\"Error fetching currencies:\", error);\r\n        alert(\"Error fetching currencies. Please try again.\");\r\n      }\r\n    };\r\n\r\n    // Fetch the currencies on page load\r\n    fetchCurrencies();\r\n  }, []);\r\n\r\n  const convert = async () => {\r\n    if (!fromCurrency || !toCurrency || !amount) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    // CryptoCompare API endpoint for price conversion\r\n    const apiKey =\r\n      \"d4f683327d3ad228ea83784866b01e88679499b4eaa6c7e9f14eb7a5c2cc2151\";\r\n    const apiUrl = `https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=${toCurrency}&api_key=${apiKey}`;\r\n\r\n    try {\r\n      // Fetch conversion data from CryptoCompare\r\n      const response = await fetch(apiUrl);\r\n      const data = await response.json();\r\n\r\n      // Check if conversion data is available\r\n      if (data && data[toCurrency]) {\r\n        const conversionResult = data[toCurrency];\r\n        setResult(\r\n          `${amount} ${fromCurrency} = ${conversionResult} ${toCurrency}`\r\n        );\r\n      } else {\r\n        alert(\"Error fetching data. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Error fetching data. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"currencyText\">Currency Converter</div>\r\n      <div id=\"cryptoConverter\">\r\n        <h2>Crypto Converter</h2>\r\n        <label htmlFor=\"fromCurrency\">From:</label>\r\n        <select\r\n          id=\"fromCurrency\"\r\n          value={fromCurrency}\r\n          onChange={(e) => setFromCurrency(e.target.value)}\r\n        >\r\n          {currencies.map((currency) => (\r\n            <option key={currency.id} value={currency.id}>\r\n              {currency.symbol}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"amount\">Amount:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"amount\"\r\n          placeholder=\"Enter amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"toCurrency\">To:</label>\r\n        <select\r\n          id=\"toCurrency\"\r\n          value={toCurrency}\r\n          onChange={(e) => setToCurrency(e.target.value)}\r\n        >\r\n          {currencies.map((currency) => (\r\n            <option key={currency.id} value={currency.id}>\r\n              {currency.symbol}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <button onClick={convert}>Convert</button>\r\n\r\n        <div id=\"result\">{result}</div>\r\n\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/1280px-Bitcoin.svg.png\"\r\n          alt=\"Bitcoin Logo\"\r\n          id=\"bitcoinLogo\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}